"use strict";
/** @module Errors */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DependencyError = exports.WrapperError = exports.UncachedError = exports.UncaughtError = void 0;
/** An error that is thrown when we encounter an error, and no `error` listeners are present. */
class UncaughtError extends Error {
    name = "UncaughtError";
    constructor(error) {
        super("Uncaught 'error' event", { cause: error });
    }
}
exports.UncaughtError = UncaughtError;
/** An error ancountered when an object is unexpectedly not cached. */
class UncachedError extends Error {
    name = "UncachedError";
    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/ban-types
    constructor(...args) {
        let message;
        if (args.length === 1) {
            [message] = args;
        }
        else {
            const [clazz, property, intent, client] = args;
            message = client && client.options.restMode ? `${clazz.constructor.name}#${property} is not present in rest mode.` : `${clazz.constructor.name}#${property} is not present if you don't have the ${intent} intent.`;
        }
        super(message);
    }
}
exports.UncachedError = UncachedError;
/** An error encountered within {@link InteractionOptionsWrapper | InteractionOptionsWrapper} & {@link SelectMenuValuesWrapper | SelectMenuValuesWrapper}. */
class WrapperError extends Error {
    name = "WrapperError";
    constructor(message) {
        super(message);
    }
}
exports.WrapperError = WrapperError;
/** An error encountered when a needed dependency is missing. */
class DependencyError extends Error {
    name = "DependencyError";
    constructor(message) {
        super(message);
    }
}
exports.DependencyError = DependencyError;
/** A gateway error. */
class GatewayError extends Error {
    code;
    name = "GatewayError";
    constructor(message, code) {
        super(message);
        this.code = code;
    }
}
exports.default = GatewayError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL3V0aWwvRXJyb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxxQkFBcUI7OztBQU1yQixnR0FBZ0c7QUFDaEcsTUFBYSxhQUFjLFNBQVEsS0FBSztJQUMzQixJQUFJLEdBQUcsZUFBZSxDQUFDO0lBQ2hDLFlBQVksS0FBcUI7UUFDN0IsS0FBSyxDQUFDLHdCQUF3QixFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDdEQsQ0FBQztDQUNKO0FBTEQsc0NBS0M7QUFFRCxzRUFBc0U7QUFDdEUsTUFBYSxhQUFjLFNBQVEsS0FBSztJQUMzQixJQUFJLEdBQUcsZUFBZSxDQUFDO0lBQ2hDLDRGQUE0RjtJQUM1RixZQUFZLEdBQUcsSUFBaUc7UUFDNUcsSUFBSSxPQUFlLENBQUM7UUFDcEIsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUNuQixDQUFDLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQztTQUNwQjthQUFNO1lBQ0gsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQztZQUMvQyxPQUFPLEdBQUcsTUFBTSxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxJQUFJLFFBQVEsK0JBQStCLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLElBQUksUUFBUSx5Q0FBeUMsTUFBTSxVQUFVLENBQUM7U0FDdk47UUFFRCxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbkIsQ0FBQztDQUNKO0FBZEQsc0NBY0M7QUFFRCw2SkFBNko7QUFDN0osTUFBYSxZQUFhLFNBQVEsS0FBSztJQUMxQixJQUFJLEdBQUcsY0FBYyxDQUFDO0lBQy9CLFlBQVksT0FBZTtRQUN2QixLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbkIsQ0FBQztDQUNKO0FBTEQsb0NBS0M7QUFFRCxnRUFBZ0U7QUFDaEUsTUFBYSxlQUFnQixTQUFRLEtBQUs7SUFDN0IsSUFBSSxHQUFHLGlCQUFpQixDQUFDO0lBQ2xDLFlBQVksT0FBZTtRQUN2QixLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbkIsQ0FBQztDQUNKO0FBTEQsMENBS0M7QUFHRCx1QkFBdUI7QUFDdkIsTUFBcUIsWUFBYSxTQUFRLEtBQUs7SUFDM0MsSUFBSSxDQUFTO0lBQ0osSUFBSSxHQUFHLGNBQWMsQ0FBQztJQUMvQixZQUFZLE9BQWUsRUFBRSxJQUFZO1FBQ3JDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLENBQUM7Q0FDSjtBQVBELCtCQU9DIn0=